// <auto-generated />
using System;
using AttendanceCheck.ApplicationEFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AttendanceCheck.ApplicationEFCore.Migrations
{
    [DbContext(typeof(AttendanceCheckDbContext))]
    partial class AttendanceCheckDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AttendanceCheck.Models.ApplicationUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("IdentityGUID")
                        .HasColumnType("nvarchar(450)")
                        .HasMaxLength(450);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<int>("NotifNoOfAbsentInMonth")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("AttendanceCheck.Models.Attendance", b =>
                {
                    b.Property<int>("AttendanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppUserUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("AttDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AttendanceId");

                    b.HasIndex("AppUserUserId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("AttendanceCheck.Models.AttendanceDetail", b =>
                {
                    b.Property<int>("AttendanceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AttStatus")
                        .HasColumnType("int");

                    b.Property<int?>("AttendanceId")
                        .HasColumnType("int");

                    b.Property<int?>("PersonAttDetailPersonId")
                        .HasColumnType("int");

                    b.HasKey("AttendanceDetailId");

                    b.HasIndex("AttendanceId");

                    b.HasIndex("PersonAttDetailPersonId");

                    b.ToTable("AttendanceDetails");
                });

            modelBuilder.Entity("AttendanceCheck.Models.AttendanceNotification", b =>
                {
                    b.Property<int>("AttNotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActionMade")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int?>("AppUserUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Noted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NotedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotifNoOfAbsentCount")
                        .HasColumnType("int");

                    b.Property<int?>("PersonInNotifPersonId")
                        .HasColumnType("int");

                    b.HasKey("AttNotificationId");

                    b.HasIndex("AppUserUserId");

                    b.HasIndex("PersonInNotifPersonId");

                    b.ToTable("AttendanceNotifications");
                });

            modelBuilder.Entity("AttendanceCheck.Models.Group", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppUserUserId")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("GroupId");

                    b.HasIndex("AppUserUserId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("AttendanceCheck.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(22)")
                        .HasMaxLength(22);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(70)")
                        .HasMaxLength(70);

                    b.Property<int?>("PersonGroupGroupId")
                        .HasColumnType("int");

                    b.HasKey("PersonId");

                    b.HasIndex("PersonGroupGroupId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("AttendanceCheck.Models.Attendance", b =>
                {
                    b.HasOne("AttendanceCheck.Models.ApplicationUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserUserId");
                });

            modelBuilder.Entity("AttendanceCheck.Models.AttendanceDetail", b =>
                {
                    b.HasOne("AttendanceCheck.Models.Attendance", "Attendance")
                        .WithMany("AttendanceDetails")
                        .HasForeignKey("AttendanceId");

                    b.HasOne("AttendanceCheck.Models.Person", "PersonAttDetail")
                        .WithMany()
                        .HasForeignKey("PersonAttDetailPersonId");
                });

            modelBuilder.Entity("AttendanceCheck.Models.AttendanceNotification", b =>
                {
                    b.HasOne("AttendanceCheck.Models.ApplicationUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserUserId");

                    b.HasOne("AttendanceCheck.Models.Person", "PersonInNotif")
                        .WithMany()
                        .HasForeignKey("PersonInNotifPersonId");
                });

            modelBuilder.Entity("AttendanceCheck.Models.Group", b =>
                {
                    b.HasOne("AttendanceCheck.Models.ApplicationUser", "AppUser")
                        .WithMany("Groups")
                        .HasForeignKey("AppUserUserId");
                });

            modelBuilder.Entity("AttendanceCheck.Models.Person", b =>
                {
                    b.HasOne("AttendanceCheck.Models.Group", "PersonGroup")
                        .WithMany("People")
                        .HasForeignKey("PersonGroupGroupId");
                });
#pragma warning restore 612, 618
        }
    }
}
